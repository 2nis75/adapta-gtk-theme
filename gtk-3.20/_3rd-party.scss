/*****************
 * Unity Desktop *
 *****************/

// window decorations
UnityDecoration {
  -UnityDecoration-extents: 28px 0 0 0;
  -UnityDecoration-input-extents: 8px;

  -UnityDecoration-shadow-offset-x: 0px;
  -UnityDecoration-shadow-offset-y: 8px;
  -UnityDecoration-active-shadow-color: rgba(0, 0, 0, 0.24);
  -UnityDecoration-active-shadow-radius: 12px;
  -UnityDecoration-inactive-shadow-color: rgba(0, 0, 0, 0.16);
  -UnityDecoration-inactive-shadow-radius: 6px;

  -UnityDecoration-glow-size: 10px;
  -UnityDecoration-glow-color: $selected_bg_color;

  -UnityDecoration-title-indent: 16px;
  -UnityDecoration-title-fade: 32px;
  -UnityDecoration-title-alignment: 0.0;

  &.top {
    border-width: 1px 0 0;
    border-style: solid none none;
    border-color: $borders_color;
    border-radius: 2px 2px 0 0;
    padding: 1px 6px 0 6px; // FIXME: too much tiny!

    background-image: linear-gradient(to bottom, $inverted_dark_color);
    // The foreground color will be used to paint the text
    color: $inverted_fg_color;
    box-shadow: inset 0 1px $highlight_color;

    &:backdrop { color: $insensitive_inverted_fg_color; }
  }
  &.left,
  &.right,
  &.bottom {
    &, &:backdrop { background-image: none; }
  }
}

// panel styling
UnityPanelWidget,
.unity-panel {
  color: $inverted_fg_color;
  background-color: gtkopacity($inverted_dark_color, 0.88);
  box-shadow: inset 0 -1px $highlight_color; // edge-highlight like HUD
  border-bottom: 1px solid $borders_color;
}

.unity-panel menubar {
  & menuitem,
  & menuitem * {
    border-radius: 0;
    color: $inverted_fg_color;
    background-color: transparent;
    border-bottom: 1px solid transparent;
  }

  & menuitem:hover,
  & menuitem *:hover {
    color: $selected_fg_color;
    box-shadow: inset 0 -2px $selected_bg_color;
  }
}


/************
 * Corebird *
 ************/

// use normal foreground colour
stack button.profile-button {
  &:checked { color: $fg_color; }
}

headerbar.titlebar box {
  button.toggle.account-button { // left-most account-button
    min-width: 1em;
    min-height: 1em;
    // FIXME: it can't override its own styleshoot
    padding: 0.5em 0.75em 0.5em;
    // revert to square button since we can't make perfect circle button
    border-radius: 2px;
    -gtk-outline-radius: 2px;

    // FIXME: it can't override its own styleshoot
    .avatar-round { border-color: transparent; }
  }

  button.image-button.toggle { // tweet button
    min-width: 1em;
    min-height: 1em;
    padding: 0.5em 0.75em 0.5em;
  }
}


/********
 * Nemo *
 ********/

.nemo-desktop.nemo-canvas-item {
  @extend .nautilus-desktop.nautilus-canvas-item;
}

window {
  // Workaround for invisible text in rename entry
  EelEditableLabel { transition: none; }

  // draw bottom border and shadows
  grid > box > box > toolbar.primary-toolbar {
    border-bottom: 1px solid $borders_color;
    box-shadow: if($variant=='light', $toolbar-shadow-light,
                                      $toolbar-shadow-dark);
  }

  // tweak notebook colour
  grid > paned > box > paned > box > notebook {
    &, > stack:not(:only-child) {
      background-color: $base_color;
    }
  }

  // remove double-border
  grid > paned > box > scrolledwindow.frame { border-width: 0; }

  // force using flat-style on bottom bar
  grid > widget {
    background-color: $secondary_dark_color;
    box-shadow: $inline-shadow;

    > box { padding: rem(2.7px); }

    > box > button.image-button {
      @extend button.flat;
      min-width: rem(13.3px);
      min-height: rem(29.3px);
      border-radius: 2px;
      -gtk-outline-radius: 2px;
      padding: 0 rem(10px) 0;
      box-shadow: none;
      border-image: -gtk-gradient(radial,
                                  center bottom, 0,
                                  center bottom, 0.001,
                                  to($track_color),
                                  to(transparent))
                                  0 0 0 / 0 0 0px;
      color: $secondary_fg_color;
      &:hover {
        box-shadow: none;
        border-image: none;
        color: $fg_color;
      }
      &:checked {
        box-shadow: none;
        border-image: -gtk-gradient(radial,
                                    center bottom, 0,
                                    center bottom, 0.5,
                                    to($selected_bg_color),
                                    to(transparent))
                                    0 0 2 / 0 0 2px;
        background-color: transparent;
        color: $fg_color;
        &:disabled {
          box-shadow: none;
          background-color: transparent;
          color: $insensitive_fg_color;
          border-image: none;
          > label { color: inherit; }
        }
      }
      &:disabled {
        box-shadow: none;
        background-color: transparent;
        color: $insensitive_secondary_fg_color;
        border-image: none;
      }
    }

    box > separator.vertical { // remove separator
      min-width: 0;
      color: transparent;
      background-color: transparent;
    }
  }
}


/************
 * Lollypop *
 ************/

window > headerbar > widget > box.horizontal {
  > grid.horizontal > button.toggle.image-button {
    min-width: rem(17.3px);
    min-height: rem(37.3px);
    padding: 0 rem(10px) 0;
  }
  > button.image-button {
    min-width: rem(17.3px);
    min-height: rem(37.3px);
    margin: rem(-2px) 0;
    padding: 0 rem(10px) 0;
  }
}

